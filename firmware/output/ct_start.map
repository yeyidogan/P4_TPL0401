Component: ARM Compiler 5.06 update 4 (build 422) Tool: armlink [4d35d2]

==============================================================================

Section Cross References

    main.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.text) refers to system_stm32f0xx.o(.text) for SystemCoreClockUpdate
    main.o(.text) refers to gpio.o(.text) for initGpio
    main.o(.text) refers to pub_var.o(.text) for setParameters
    main.o(.text) refers to uart.o(.text) for initUart1
    main.o(.text) refers to timer.o(.text) for initTimers
    main.o(.text) refers to i2c.o(.text) for init_i2c
    main.o(.text) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(.text) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    main.o(.text) refers to rtx_evflags.o(.text.osEventFlagsNew) for osEventFlagsNew
    main.o(.text) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.text) refers to pub_var.o(.bss) for sys_par
    main.o(.text) refers to stepper_motor.o(.bss) for motor_s
    main.o(.text) refers to main.o(.data) for mutex_i2c
    main.o(.text) refers to hdc1080.o(.text) for task_HDC1080
    main.o(.text) refers to stepper_motor.o(.text) for task_stepper_motor
    main.o(.text) refers to main_task.o(.text) for task_main
    pub_var.o(.text) refers to pub_var.o(.bss) for sys_par
    hdc1080.o(.text) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    hdc1080.o(.text) refers to i2c.o(.text) for i2c_master_process
    hdc1080.o(.text) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    hdc1080.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    hdc1080.o(.text) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    hdc1080.o(.text) refers to rtx_thread.o(.text.osThreadSetPriority) for osThreadSetPriority
    hdc1080.o(.text) refers to util.o(.text) for wordEndianer
    hdc1080.o(.text) refers to main.o(.data) for mutex_i2c
    hdc1080.o(.text) refers to hdc1080.o(.data) for statusT
    hdc1080.o(.text) refers to i2c.o(.data) for i2c_master_send_start_stop
    hdc1080.o(.text) refers to i2c.o(.bss) for i2c_tx_buf
    modbus.o(.text) refers to util.o(.text) for wordEndianer
    modbus.o(.text) refers to modbus_func.o(.text) for readCoils
    modbus.o(.text) refers to modbus.o(.constdata) for .constdata
    modbus.o(.text) refers to modbus.o(.bss) for mbTxRxData
    modbus.o(.text) refers to modbus.o(.data) for uiWordQty
    modbus.o(.text) refers to modbus_func.o(.constdata) for sizeOfHoldingRegister
    modbus_func.o(.text) refers to gpio.o(.text) for readGpioOutputs
    modbus_func.o(.text) refers to modbus.o(.text) for crc16
    modbus_func.o(.text) refers to modbus_func.o(i.__ARM_common_switch8) for __ARM_common_switch8
    modbus_func.o(.text) refers to util.o(.text) for wordEndianer
    modbus_func.o(.text) refers to gpio.o(.data) for ulOutputs
    modbus_func.o(.text) refers to modbus_func.o(.data) for ulMfTmp
    modbus_func.o(.text) refers to modbus.o(.bss) for mbTxRxData
    modbus_func.o(.text) refers to modbus.o(.data) for uiWordQty
    modbus_func.o(.text) refers to modbus_func.o(.constdata) for stHoldingRegArray
    modbus_func.o(.constdata) refers to modbus_func.o(.data) for ulPar1
    modbus_func.o(.constdata) refers to modbus_func.o(.text) for rwDummyFunc
    stepper_motor.o(.text) refers to gpio.o(.text) for setGpioOutputs
    stepper_motor.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    stepper_motor.o(.text) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    stepper_motor.o(.text) refers to stepper_motor.o(.bss) for motor_s
    stepper_motor.o(.text) refers to stepper_motor.o(.data) for active_motor
    stepper_motor.o(.text) refers to stepper_motor.o(.constdata) for stepper_max_point
    stepper_motor.o(.text) refers to gpio.o(.data) for ulOutputs
    stepper_motor.o(.text) refers to main.o(.data) for event_general
    hc0x_bluetooth.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    hc0x_bluetooth.o(.text) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    hc0x_bluetooth.o(.text) refers to _printf_dec.o(.text) for _printf_int_dec
    hc0x_bluetooth.o(.text) refers to util.o(.text) for copy_string
    hc0x_bluetooth.o(.text) refers to uart.o(.text) for uart1TxCmd
    hc0x_bluetooth.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    hc0x_bluetooth.o(.text) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    hc0x_bluetooth.o(.text) refers to noretval__2sprintf.o(.text) for __2sprintf
    hc0x_bluetooth.o(.text) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    hc0x_bluetooth.o(.text) refers to uart.o(.data) for uart1Tx
    hc0x_bluetooth.o(.text) refers to uart.o(.bss) for uart1Rx
    hc0x_bluetooth.o(.text) refers to hdc1080.o(.data) for stHDC1080Status
    hc0x_bluetooth.o(.text) refers to main.o(.data) for event_general
    hc0x_bluetooth.o(.text) refers to stepper_motor.o(.bss) for motor_s
    main_task.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main_task.o(.text) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main_task.o(.text) refers to _printf_dec.o(.text) for _printf_int_dec
    main_task.o(.text) refers to gpio.o(.text) for readGpioInputs
    main_task.o(.text) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    main_task.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    main_task.o(.text) refers to noretval__2sprintf.o(.text) for __2sprintf
    main_task.o(.text) refers to util.o(.text) for count_string
    main_task.o(.text) refers to uart.o(.text) for uart1TxCmd
    main_task.o(.text) refers to gpio.o(.data) for ulInputs
    main_task.o(.text) refers to main_task.o(.data) for infrared_sensor_cnt
    main_task.o(.text) refers to stepper_motor.o(.bss) for motor_s
    main_task.o(.text) refers to main.o(.data) for event_general
    main_task.o(.text) refers to hdc1080.o(.data) for stTempHum
    main_task.o(.text) refers to uart.o(.data) for uart1Tx
    gpio.o(.text) refers to stm32f0xx_gpio.o(.text) for GPIO_PinAFConfig
    gpio.o(.text) refers to gpio.o(.data) for ulOutputs
    uart.o(.text) refers to stm32f0xx_usart.o(.text) for USART_GetITStatus
    uart.o(.text) refers to stm32f0xx_dma.o(.text) for DMA_Cmd
    uart.o(.text) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    uart.o(.text) refers to stm32f0xx_misc.o(.text) for NVIC_Init
    uart.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    uart.o(.text) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    uart.o(.text) refers to modbus.o(.text) for modbusRTU
    uart.o(.text) refers to hc0x_bluetooth.o(.text) for mobile_app_interface
    uart.o(.text) refers to uart.o(.data) for uart1Flags
    uart.o(.text) refers to uart.o(.bss) for uart1Rx
    uart.o(.text) refers to main.o(.data) for event_general
    uart.o(.text) refers to pub_var.o(.bss) for sys_par
    uart.o(.text) refers to modbus.o(.bss) for mbTxRxData
    i2c.o(.text) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    i2c.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    i2c.o(.text) refers to i2c.o(.data) for ulTempI2C
    i2c.o(.text) refers to i2c.o(.bss) for i2c_rx_buf
    i2c.o(.text) refers to main.o(.data) for event_general
    timer.o(.text) refers to i2c.o(.data) for uiTimerI2C
    timer.o(.text) refers to hdc1080.o(.data) for uiTimerHDC1080
    timer.o(.text) refers to uart.o(.data) for uiTimerUart1
    stm32f0xx_gpio.o(.text) refers to stm32f0xx_rcc.o(.text) for RCC_AHBPeriphResetCmd
    stm32f0xx_usart.o(.text) refers to stm32f0xx_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f0xx_usart.o(.text) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    stm32f0xx_i2c.o(.text) refers to stm32f0xx_rcc.o(.text) for RCC_APB1PeriphResetCmd
    stm32f0xx_tim.o(.text) refers to stm32f0xx_rcc.o(.text) for RCC_APB2PeriphResetCmd
    stm32f0xx_rcc.o(.text) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    stm32f0xx_rcc.o(.text) refers to stm32f0xx_rcc.o(.data) for APBAHBPrescTable
    rtx_lib.o(.text) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.text) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_lib.o(.text) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.text) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.text) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.text) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.text) refers to rtx_lib.o(.bss.os) for os_libspace
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_config.o(.text) refers to modbus_func.o(i.__ARM_common_switch8) for __ARM_common_switch8
    startup_stm32f030x8.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030x8.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030x8.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030x8.o(RESET) refers to startup_stm32f030x8.o(STACK) for __initial_sp
    startup_stm32f030x8.o(RESET) refers to startup_stm32f030x8.o(.text) for Reset_Handler
    startup_stm32f030x8.o(RESET) refers to irq_cm0.o(.text) for SVC_Handler
    startup_stm32f030x8.o(RESET) refers to uart.o(.text) for DMA1_Channel2_3_IRQHandler
    startup_stm32f030x8.o(RESET) refers to timer.o(.text) for TIM6_IRQHandler
    startup_stm32f030x8.o(RESET) refers to i2c.o(.text) for I2C1_IRQHandler
    startup_stm32f030x8.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030x8.o(.text) refers to system_stm32f0xx.o(.text) for SystemInit
    startup_stm32f030x8.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f030x8.o(.text) refers to startup_stm32f030x8.o(HEAP) for Heap_Mem
    startup_stm32f030x8.o(.text) refers to startup_stm32f030x8.o(STACK) for Stack_Mem
    system_stm32f0xx.o(.text) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    system_stm32f0xx.o(.text) refers to system_stm32f0xx.o(.data) for SystemCoreClock
    system_stm32f0xx.o(.text) refers to system_stm32f0xx.o(.constdata) for AHBPrescTable
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr.o(.text) for __aeabi_memclr8
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerSetup) for osRtxSysTimerSetup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_config.o(.text) for osRtxIdleThread
    rtx_kernel.o(.text.svcRtxKernelStart) refers to system_stm32f0xx.o(.data) for SystemCoreClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_system.o(.text.osRtxSysTimerDisable) for osRtxSysTimerDisable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.data.irqRtxLibRef) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm0.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm0.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for osRtxSysTimerAckIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerSetup) refers to aeabi_sdivfast.o(.text) for __aeabi_uidiv
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup) refers to rtx_system.o(.text.osRtxSysTimerSetup) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable) refers to rtx_system.o(.text.osRtxSysTimerEnable) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable) refers to rtx_system.o(.text.osRtxSysTimerDisable) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetFreq) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    __2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_dec.o(.text) refers to rtudiv10.o(.text) for __rt_udiv10
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _printf_char_common.o(.text) refers to __printf.o(.text) for __printf
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f030x8.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing hdc1080.o(.rev16_text), (4 bytes).
    Removing hdc1080.o(.revsh_text), (4 bytes).
    Removing modbus.o(.rev16_text), (4 bytes).
    Removing modbus.o(.revsh_text), (4 bytes).
    Removing modbus_func.o(.rev16_text), (4 bytes).
    Removing modbus_func.o(.revsh_text), (4 bytes).
    Removing stepper_motor.o(.rev16_text), (4 bytes).
    Removing stepper_motor.o(.revsh_text), (4 bytes).
    Removing hc0x_bluetooth.o(.rev16_text), (4 bytes).
    Removing hc0x_bluetooth.o(.revsh_text), (4 bytes).
    Removing main_task.o(.rev16_text), (4 bytes).
    Removing main_task.o(.revsh_text), (4 bytes).
    Removing gpio.o(.rev16_text), (4 bytes).
    Removing gpio.o(.revsh_text), (4 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing i2c.o(.rev16_text), (4 bytes).
    Removing i2c.o(.revsh_text), (4 bytes).
    Removing timer.o(.rev16_text), (4 bytes).
    Removing timer.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_dma.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_dma.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_misc.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_misc.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_usart.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_usart.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_i2c.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_i2c.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_i2c.o(.text), (1174 bytes).
    Removing stm32f0xx_tim.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_tim.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_tim.o(.text), (3072 bytes).
    Removing stm32f0xx_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_rcc.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing system_stm32f0xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f0xx.o(.revsh_text), (4 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (60 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (220 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (104 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (28 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListRoot), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayInsert), (148 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayRemove), (100 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadBlock), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (308 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (152 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (164 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (316 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (672 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (100 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (460 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (176 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (68 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (24 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (76 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (24 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (120 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (108 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (30 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerThread), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (232 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (164 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (26 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (116 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (74 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (564 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (174 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (28 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (164 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (140 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerDisable), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetCount), (56 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetFreq), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess), (476 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueNew), (456 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGet), (448 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (28 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (378 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (140 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGet), (224 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (60 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).

369 unused section(s) (total 16846 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../../Source/rtx_delay.c              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    ../../../Source/rtx_evflags.c            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    ../../../Source/rtx_kernel.c             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    ../../../Source/rtx_memory.c             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    ../../../Source/rtx_mempool.c            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    ../../../Source/rtx_msgqueue.c           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    ../../../Source/rtx_mutex.c              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    ../../../Source/rtx_system.c             0x00000000   Number         0  rtx_system.o ABSOLUTE
    ../../../Source/rtx_thread.c             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    ../../../Source/rtx_timer.c              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/division.c                       0x00000000   Number         0  rtudiv10.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm0.s            0x00000000   Number         0  irq_cm0.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F030R8\startup_stm32f030x8.s 0x00000000   Number         0  startup_stm32f030x8.o ABSOLUTE
    RTE\Device\STM32F030R8\system_stm32f0xx.c 0x00000000   Number         0  system_stm32f0xx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\STM32F030R8\\system_stm32f0xx.c 0x00000000   Number         0  system_stm32f0xx.o ABSOLUTE
    app\\hc0x_bluetooth.c                    0x00000000   Number         0  hc0x_bluetooth.o ABSOLUTE
    app\\hdc1080.c                           0x00000000   Number         0  hdc1080.o ABSOLUTE
    app\\main.c                              0x00000000   Number         0  main.o ABSOLUTE
    app\\main_task.c                         0x00000000   Number         0  main_task.o ABSOLUTE
    app\\modbus.c                            0x00000000   Number         0  modbus.o ABSOLUTE
    app\\modbus_func.c                       0x00000000   Number         0  modbus_func.o ABSOLUTE
    app\\stepper_motor.c                     0x00000000   Number         0  stepper_motor.o ABSOLUTE
    app\hc0x_bluetooth.c                     0x00000000   Number         0  hc0x_bluetooth.o ABSOLUTE
    app\hdc1080.c                            0x00000000   Number         0  hdc1080.o ABSOLUTE
    app\main.c                               0x00000000   Number         0  main.o ABSOLUTE
    app\main_task.c                          0x00000000   Number         0  main_task.o ABSOLUTE
    app\modbus.c                             0x00000000   Number         0  modbus.o ABSOLUTE
    app\modbus_func.c                        0x00000000   Number         0  modbus_func.o ABSOLUTE
    app\pub_var.c                            0x00000000   Number         0  pub_var.o ABSOLUTE
    app\stepper_motor.c                      0x00000000   Number         0  stepper_motor.o ABSOLUTE
    app\util.c                               0x00000000   Number         0  util.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    driver\\gpio.c                           0x00000000   Number         0  gpio.o ABSOLUTE
    driver\\i2c.c                            0x00000000   Number         0  i2c.o ABSOLUTE
    driver\\timer.c                          0x00000000   Number         0  timer.o ABSOLUTE
    driver\\uart.c                           0x00000000   Number         0  uart.o ABSOLUTE
    driver\gpio.c                            0x00000000   Number         0  gpio.o ABSOLUTE
    driver\i2c.c                             0x00000000   Number         0  i2c.o ABSOLUTE
    driver\timer.c                           0x00000000   Number         0  timer.o ABSOLUTE
    driver\uart.c                            0x00000000   Number         0  uart.o ABSOLUTE
    stm32_lib\\stm32f0xx_dma.c               0x00000000   Number         0  stm32f0xx_dma.o ABSOLUTE
    stm32_lib\\stm32f0xx_gpio.c              0x00000000   Number         0  stm32f0xx_gpio.o ABSOLUTE
    stm32_lib\\stm32f0xx_i2c.c               0x00000000   Number         0  stm32f0xx_i2c.o ABSOLUTE
    stm32_lib\\stm32f0xx_misc.c              0x00000000   Number         0  stm32f0xx_misc.o ABSOLUTE
    stm32_lib\\stm32f0xx_rcc.c               0x00000000   Number         0  stm32f0xx_rcc.o ABSOLUTE
    stm32_lib\\stm32f0xx_tim.c               0x00000000   Number         0  stm32f0xx_tim.o ABSOLUTE
    stm32_lib\\stm32f0xx_usart.c             0x00000000   Number         0  stm32f0xx_usart.o ABSOLUTE
    stm32_lib\stm32f0xx_dma.c                0x00000000   Number         0  stm32f0xx_dma.o ABSOLUTE
    stm32_lib\stm32f0xx_gpio.c               0x00000000   Number         0  stm32f0xx_gpio.o ABSOLUTE
    stm32_lib\stm32f0xx_i2c.c                0x00000000   Number         0  stm32f0xx_i2c.o ABSOLUTE
    stm32_lib\stm32f0xx_misc.c               0x00000000   Number         0  stm32f0xx_misc.o ABSOLUTE
    stm32_lib\stm32f0xx_rcc.c                0x00000000   Number         0  stm32f0xx_rcc.o ABSOLUTE
    stm32_lib\stm32f0xx_tim.c                0x00000000   Number         0  stm32f0xx_tim.o ABSOLUTE
    stm32_lib\stm32f0xx_usart.c              0x00000000   Number         0  stm32f0xx_usart.o ABSOLUTE
    RESET                                    0x08000000   Section      180  startup_stm32f030x8.o(RESET)
    !!!main                                  0x080000b4   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000bc   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x080000f8   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x08000114   Section        2  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000009  0x08000116   Section       10  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$00000017  0x08000120   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x08000124   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000126   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000128   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800012a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800012a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800012a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800012a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800012a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800012a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800012a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800012c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800012c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800012c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x08000132   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0800013a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800013e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800013e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000146   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000148   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000148   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800014c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000154   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x0800018c   Section        0  main.o(.text)
    .text                                    0x08000298   Section        0  pub_var.o(.text)
    .text                                    0x080002bc   Section        0  util.o(.text)
    .text                                    0x0800034c   Section        0  hdc1080.o(.text)
    .text                                    0x08000638   Section        0  modbus.o(.text)
    .text                                    0x08000914   Section        0  modbus_func.o(.text)
    .text                                    0x08000b8c   Section        0  stepper_motor.o(.text)
    .text                                    0x08000f50   Section        0  hc0x_bluetooth.o(.text)
    .text                                    0x080012d4   Section        0  main_task.o(.text)
    .text                                    0x0800149c   Section        0  gpio.o(.text)
    .text                                    0x080015ec   Section        0  uart.o(.text)
    .text                                    0x080019c8   Section        0  i2c.o(.text)
    __NVIC_SetPriority                       0x08001d13   Thumb Code   110  i2c.o(.text)
    .text                                    0x08001dc0   Section        0  timer.o(.text)
    __NVIC_SetPriority                       0x08001e6f   Thumb Code   110  timer.o(.text)
    .text                                    0x08001f00   Section        0  stm32f0xx_dma.o(.text)
    .text                                    0x080021b4   Section        0  stm32f0xx_gpio.o(.text)
    .text                                    0x080023c0   Section        0  stm32f0xx_misc.o(.text)
    .text                                    0x08002474   Section        0  stm32f0xx_usart.o(.text)
    .text                                    0x08002a88   Section        0  stm32f0xx_rcc.o(.text)
    .text                                    0x080031d8   Section        0  rtx_lib.o(.text)
    os_kernel_is_active                      0x080031e1   Thumb Code    34  rtx_lib.o(.text)
    __tagsym$$used                           0x08003261   Number         0  rtx_lib.o(.text)
    __tagsym$$used                           0x08003283   Number         0  rtx_lib.o(.text)
    __tagsym$$used                           0x0800329b   Number         0  rtx_lib.o(.text)
    __tagsym$$used                           0x080032af   Number         0  rtx_lib.o(.text)
    .text                                    0x080032cc   Section        0  rtx_config.o(.text)
    .text                                    0x080032f0   Section       56  startup_stm32f030x8.o(.text)
    .text                                    0x08003328   Section        0  system_stm32f0xx.o(.text)
    .text                                    0x080034d0   Section      152  irq_cm0.o(.text)
    .text                                    0x08003568   Section        0  noretval__2sprintf.o(.text)
    .text                                    0x08003590   Section        0  __printf.o(.text)
    .text                                    0x080035fc   Section        0  _printf_dec.o(.text)
    .text                                    0x08003668   Section        0  rt_memcpy.o(.text)
    .text                                    0x080036ea   Section        0  aeabi_memset4.o(.text)
    .text                                    0x080036fc   Section        0  rt_memclr.o(.text)
    .text                                    0x0800373c   Section      488  aeabi_sdivfast.o(.text)
    .text                                    0x08003924   Section        0  heapauxi.o(.text)
    .text                                    0x0800392a   Section        0  _printf_intcommon.o(.text)
    .text                                    0x080039dc   Section        0  _printf_char_common.o(.text)
    _printf_input_char                       0x080039dd   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x08003a0c   Section        0  _sputc.o(.text)
    .text                                    0x08003a16   Section        0  rtudiv10.o(.text)
    .text                                    0x08003a3e   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x08003a7c   Section        0  exit.o(.text)
    .text                                    0x08003a8c   Section        8  libspace.o(.text)
    .text                                    0x08003a94   Section        0  sys_exit.o(.text)
    .text                                    0x08003aa0   Section        2  use_no_semi.o(.text)
    .text                                    0x08003aa2   Section        0  __dczerorl2.o(.text)
    .text                                    0x08003aa2   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08003af8   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.2_0                             0x08003b18   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08003b1c   Section        0  rtx_evflags.o(.text.osEventFlagsNew)
    __arm_cp.8_0                             0x08003b50   Number         4  rtx_evflags.o(.text.osEventFlagsNew)
    [Anonymous Symbol]                       0x08003b54   Section        0  rtx_evflags.o(.text.osEventFlagsSet)
    __arm_cp.10_0                            0x08003ba8   Number         4  rtx_evflags.o(.text.osEventFlagsSet)
    [Anonymous Symbol]                       0x08003bac   Section        0  rtx_evflags.o(.text.osEventFlagsWait)
    __arm_cp.13_0                            0x08003c68   Number         4  rtx_evflags.o(.text.osEventFlagsWait)
    [Anonymous Symbol]                       0x08003c6c   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.15_0                            0x08003c98   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.15_1                            0x08003c9c   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08003ca0   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.13_0                            0x08003cd4   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08003cd8   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.16_0                            0x08003d0c   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08003d10   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.13_0                            0x08003d8c   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08003d90   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.9_0                             0x08003db0   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08003db4   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.12_0                            0x08003dd4   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08003dd8   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.7_0                             0x08003e0c   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08003e10   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.10_0                            0x08003e30   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08003e34   Section        0  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    [Anonymous Symbol]                       0x08003ed4   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08003f4a   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08003f94   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08003fca   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08004000   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x0800403e   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x08004082   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x080040c8   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.2_0                             0x08004164   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08004168   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.3_0                             0x080041d4   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.3_1                             0x080041d8   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x080041dc   Section        0  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    __arm_cp.1_0                             0x080041e4   Number         4  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    [Anonymous Symbol]                       0x080041e8   Section        0  rtx_system.o(.text.osRtxSysTimerEnable)
    __arm_cp.5_0                             0x080041f0   Number         4  rtx_system.o(.text.osRtxSysTimerEnable)
    [Anonymous Symbol]                       0x080041f4   Section        0  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_0                             0x0800421c   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_1                             0x08004220   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_2                             0x08004224   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_3                             0x08004228   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    [Anonymous Symbol]                       0x0800422c   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.9_0                             0x080042a8   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x080042ac   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.14_0                            0x080043d4   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x080043d8   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x080043f0   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08004428   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08004440   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x0800449c   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    __arm_cp.17_0                            0x080045a0   Number         4  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x080045a4   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.6_0                             0x080045e8   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x080045ec   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x080045f4   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.13_0                            0x08004618   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.13_1                            0x0800461c   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x08004620   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.12_0                            0x08004630   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08004634   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.16_0                            0x08004718   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x0800471c   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    __arm_cp.15_0                            0x080047c0   Number         4  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x080047c4   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08004838   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x0800483c   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.0_0                             0x080048dc   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x080048e0   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.19_0                            0x080048e8   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x080048ec   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.42_0                            0x08004908   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x0800490c   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.40_0                            0x08004940   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08004944   Section        0  rtx_thread.o(.text.osThreadSetPriority)
    __arm_cp.46_0                            0x08004964   Number         4  rtx_thread.o(.text.osThreadSetPriority)
    [Anonymous Symbol]                       0x08004968   Section        0  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x0800497c   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.1_0                             0x080049ec   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.1_1                             0x080049f0   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    [Anonymous Symbol]                       0x080049f4   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    [Anonymous Symbol]                       0x08004b04   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    __arm_cp.6_0                             0x08004bf0   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    [Anonymous Symbol]                       0x08004bf4   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.2_0                             0x08004bfc   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08004c00   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.0_0                             0x08004da8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.0_1                             0x08004dac   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.0_2                             0x08004db0   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08004db4   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_0                             0x08004e30   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_1                             0x08004e34   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_2                             0x08004e38   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_3                             0x08004e3c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_4                             0x08004e40   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08004e44   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.3_0                             0x08004f74   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08004f78   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.3_0                             0x08005018   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x0800501c   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.6_0                             0x080050f0   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x080050f4   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.1_0                             0x08005168   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x0800516c   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.4_0                             0x08005234   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08005238   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.32_0                            0x08005388   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x0800538c   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.21_0                            0x08005394   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x08005398   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_0                            0x080055cc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_1                            0x080055d0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_2                            0x080055d4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_3                            0x080055d8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_4                            0x080055dc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x080055e0   Section        0  rtx_thread.o(.text.svcRtxThreadSetPriority)
    __arm_cp.25_0                            0x080056f4   Number         4  rtx_thread.o(.text.svcRtxThreadSetPriority)
    i.__ARM_common_switch8                   0x080056f8   Section        0  modbus_func.o(i.__ARM_common_switch8)
    .constdata                               0x08005714   Section      518  modbus.o(.constdata)
    .constdata                               0x0800591c   Section       50  modbus_func.o(.constdata)
    .constdata                               0x08005950   Section       36  stepper_motor.o(.constdata)
    .constdata                               0x08005974   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x08005974   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x08005998   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x080059bc   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x080059d8   Section       16  system_stm32f0xx.o(.constdata)
    .constdata                               0x080059e8   Section        1  irq_cm0.o(.constdata)
    .rodata                                  0x080059ec   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x080059ec   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x08005a54   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x08005a54   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section     4656  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    os_libspace                              0x20001040   Data         480  rtx_lib.o(.bss.os)
    os_libspace_id                           0x20001220   Data          16  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001230   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001230   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001264   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001264   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200012b4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200012b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200012f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001340   Section      400  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001340   Data         200  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001408   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x200014d0   Section        8  main.o(.data)
    .data                                    0x200014d8   Section       12  hdc1080.o(.data)
    .data                                    0x200014e4   Section        2  modbus.o(.data)
    .data                                    0x200014e8   Section       24  modbus_func.o(.data)
    .data                                    0x20001500   Section        1  stepper_motor.o(.data)
    .data                                    0x20001504   Section       11  main_task.o(.data)
    .data                                    0x20001510   Section       12  gpio.o(.data)
    .data                                    0x2000151c   Section       74  uart.o(.data)
    .data                                    0x20001568   Section       22  i2c.o(.data)
    .data                                    0x2000157e   Section       16  stm32f0xx_rcc.o(.data)
    APBAHBPrescTable                         0x2000157e   Data          16  stm32f0xx_rcc.o(.data)
    .data                                    0x20001590   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x20001594   Data           1  rtx_lib.o(.data)
    .data                                    0x20001598   Section        4  system_stm32f0xx.o(.data)
    .bss                                     0x20001648   Section       10  pub_var.o(.bss)
    .bss                                     0x20001654   Section       12  modbus.o(.bss)
    .bss                                     0x20001660   Section       16  stepper_motor.o(.bss)
    .bss                                     0x20001670   Section      136  uart.o(.bss)
    .bss                                     0x200016f8   Section       68  i2c.o(.bss)
    .bss                                     0x2000173c   Section       96  libspace.o(.bss)
    HEAP                                     0x200017a0   Section      512  startup_stm32f030x8.o(HEAP)
    Heap_Mem                                 0x200017a0   Data         512  startup_stm32f030x8.o(HEAP)
    STACK                                    0x200019a0   Section     1280  startup_stm32f030x8.o(STACK)
    Stack_Mem                                0x200019a0   Data        1280  startup_stm32f030x8.o(STACK)
    __initial_sp                             0x20001ea0   Data           0  startup_stm32f030x8.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_post_padding                      - Undefined Weak Reference
    _printf_pre_padding                       - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000b4   Number         0  startup_stm32f030x8.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f030x8.o(RESET)
    __Vectors_End                            0x080000b4   Data           0  startup_stm32f030x8.o(RESET)
    __main                                   0x080000b5   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000bd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000bd   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000bd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000cd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x080000f9   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_percent                          0x08000115   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_d                                0x08000117   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_percent_end                      0x08000121   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x08000125   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000129   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800012b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800012b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800012b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800012b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800012b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800012b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800012b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800012d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800012d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800012d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x08000133   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0800013b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800013f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800013f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000147   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000149   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000149   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800014d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x08000155   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x08000155   Thumb Code     0  rt_memcpy.o(.emb_text)
    task_Led                                 0x0800018d   Thumb Code    36  main.o(.text)
    main                                     0x080001b1   Thumb Code   184  main.o(.text)
    setParameters                            0x08000299   Thumb Code    32  pub_var.o(.text)
    wordEndianer                             0x080002bd   Thumb Code    16  util.o(.text)
    copy_string                              0x080002cd   Thumb Code    44  util.o(.text)
    compare_string                           0x080002f9   Thumb Code    46  util.o(.text)
    count_string                             0x08000327   Thumb Code    36  util.o(.text)
    write_HDC1080_configuration              0x0800034d   Thumb Code   140  hdc1080.o(.text)
    read_HDC1080_configuration               0x080003d9   Thumb Code   150  hdc1080.o(.text)
    trig_HDC1080                             0x0800046f   Thumb Code   142  hdc1080.o(.text)
    init_HDC1080                             0x080004fd   Thumb Code    44  hdc1080.o(.text)
    task_HDC1080                             0x08000529   Thumb Code   230  hdc1080.o(.text)
    crc16                                    0x08000639   Thumb Code    76  modbus.o(.text)
    checkCrc16                               0x08000685   Thumb Code    94  modbus.o(.text)
    mbReturnException                        0x080006e3   Thumb Code    54  modbus.o(.text)
    modbusRTU                                0x08000719   Thumb Code   488  modbus.o(.text)
    readCoils                                0x08000915   Thumb Code    80  modbus_func.o(.text)
    readInputs                               0x08000965   Thumb Code    82  modbus_func.o(.text)
    readHoldingRegister                      0x080009b7   Thumb Code   218  modbus_func.o(.text)
    writeSingleCoil                          0x08000a91   Thumb Code   214  modbus_func.o(.text)
    rwDummyFunc                              0x08000b67   Thumb Code     4  modbus_func.o(.text)
    task_stepper_motor                       0x08000b8d   Thumb Code   920  stepper_motor.o(.text)
    change_device_name                       0x08000f51   Thumb Code    90  hc0x_bluetooth.o(.text)
    mobile_app_interface                     0x08000fab   Thumb Code   588  hc0x_bluetooth.o(.text)
    task_main                                0x080012d5   Thumb Code   392  main_task.o(.text)
    initGpio                                 0x0800149d   Thumb Code   232  gpio.o(.text)
    setGpioOutputs                           0x08001585   Thumb Code    50  gpio.o(.text)
    readGpioOutputs                          0x080015b7   Thumb Code    12  gpio.o(.text)
    readGpioInputs                           0x080015c3   Thumb Code    14  gpio.o(.text)
    USART1_IRQHandler                        0x080015ed   Thumb Code   148  uart.o(.text)
    DMA1_Channel2_3_IRQHandler               0x08001681   Thumb Code    48  uart.o(.text)
    initUart1                                0x080016b1   Thumb Code   114  uart.o(.text)
    uartNvicConfig                           0x08001723   Thumb Code    72  uart.o(.text)
    initUartDma                              0x0800176b   Thumb Code   192  uart.o(.text)
    uart1TxCmd                               0x0800182b   Thumb Code   116  uart.o(.text)
    uart1CheckRxBuf                          0x0800189f   Thumb Code    60  uart.o(.text)
    task_Uart1                               0x080018db   Thumb Code   194  uart.o(.text)
    I2C1_IRQHandler                          0x080019c9   Thumb Code   472  i2c.o(.text)
    init_i2c                                 0x08001ba1   Thumb Code   126  i2c.o(.text)
    i2c_master_process                       0x08001c1f   Thumb Code   244  i2c.o(.text)
    TIM6_IRQHandler                          0x08001dc1   Thumb Code    70  timer.o(.text)
    initTimers                               0x08001e07   Thumb Code   104  timer.o(.text)
    DMA_DeInit                               0x08001f01   Thumb Code   342  stm32f0xx_dma.o(.text)
    DMA_Init                                 0x08002057   Thumb Code    58  stm32f0xx_dma.o(.text)
    DMA_StructInit                           0x08002091   Thumb Code    26  stm32f0xx_dma.o(.text)
    DMA_Cmd                                  0x080020ab   Thumb Code    24  stm32f0xx_dma.o(.text)
    DMA_RemapConfig                          0x080020c3   Thumb Code    48  stm32f0xx_dma.o(.text)
    DMA_SetCurrDataCounter                   0x080020f3   Thumb Code     4  stm32f0xx_dma.o(.text)
    DMA_GetCurrDataCounter                   0x080020f7   Thumb Code     8  stm32f0xx_dma.o(.text)
    DMA_ITConfig                             0x080020ff   Thumb Code    20  stm32f0xx_dma.o(.text)
    DMA_GetFlagStatus                        0x08002113   Thumb Code    46  stm32f0xx_dma.o(.text)
    DMA_ClearFlag                            0x08002141   Thumb Code    26  stm32f0xx_dma.o(.text)
    DMA_GetITStatus                          0x0800215b   Thumb Code    46  stm32f0xx_dma.o(.text)
    DMA_ClearITPendingBit                    0x08002189   Thumb Code    26  stm32f0xx_dma.o(.text)
    GPIO_DeInit                              0x080021b5   Thumb Code   156  stm32f0xx_gpio.o(.text)
    GPIO_Init                                0x08002251   Thumb Code   144  stm32f0xx_gpio.o(.text)
    GPIO_StructInit                          0x080022e1   Thumb Code    20  stm32f0xx_gpio.o(.text)
    GPIO_PinLockConfig                       0x080022f5   Thumb Code    34  stm32f0xx_gpio.o(.text)
    GPIO_ReadInputDataBit                    0x08002317   Thumb Code    20  stm32f0xx_gpio.o(.text)
    GPIO_ReadInputData                       0x0800232b   Thumb Code     6  stm32f0xx_gpio.o(.text)
    GPIO_ReadOutputDataBit                   0x08002331   Thumb Code    20  stm32f0xx_gpio.o(.text)
    GPIO_ReadOutputData                      0x08002345   Thumb Code     6  stm32f0xx_gpio.o(.text)
    GPIO_SetBits                             0x0800234b   Thumb Code     4  stm32f0xx_gpio.o(.text)
    GPIO_ResetBits                           0x0800234f   Thumb Code     4  stm32f0xx_gpio.o(.text)
    GPIO_WriteBit                            0x08002353   Thumb Code    12  stm32f0xx_gpio.o(.text)
    GPIO_Write                               0x0800235f   Thumb Code     4  stm32f0xx_gpio.o(.text)
    GPIO_PinAFConfig                         0x08002363   Thumb Code    68  stm32f0xx_gpio.o(.text)
    NVIC_Init                                0x080023c1   Thumb Code   106  stm32f0xx_misc.o(.text)
    NVIC_SystemLPConfig                      0x0800242b   Thumb Code    28  stm32f0xx_misc.o(.text)
    SysTick_CLKSourceConfig                  0x08002447   Thumb Code    32  stm32f0xx_misc.o(.text)
    USART_DeInit                             0x08002475   Thumb Code   206  stm32f0xx_usart.o(.text)
    USART_Init                               0x08002543   Thumb Code   226  stm32f0xx_usart.o(.text)
    USART_StructInit                         0x08002625   Thumb Code    24  stm32f0xx_usart.o(.text)
    USART_ClockInit                          0x0800263d   Thumb Code    36  stm32f0xx_usart.o(.text)
    USART_ClockStructInit                    0x08002661   Thumb Code    12  stm32f0xx_usart.o(.text)
    USART_Cmd                                0x0800266d   Thumb Code    24  stm32f0xx_usart.o(.text)
    USART_DirectionModeCmd                   0x08002685   Thumb Code    20  stm32f0xx_usart.o(.text)
    USART_OverSampling8Cmd                   0x08002699   Thumb Code    28  stm32f0xx_usart.o(.text)
    USART_OneBitMethodCmd                    0x080026b5   Thumb Code    28  stm32f0xx_usart.o(.text)
    USART_MSBFirstCmd                        0x080026d1   Thumb Code    28  stm32f0xx_usart.o(.text)
    USART_DataInvCmd                         0x080026ed   Thumb Code    28  stm32f0xx_usart.o(.text)
    USART_InvPinCmd                          0x08002709   Thumb Code    20  stm32f0xx_usart.o(.text)
    USART_SWAPPinCmd                         0x0800271d   Thumb Code    28  stm32f0xx_usart.o(.text)
    USART_ReceiverTimeOutCmd                 0x08002739   Thumb Code    28  stm32f0xx_usart.o(.text)
    USART_SetReceiverTimeOut                 0x08002755   Thumb Code    16  stm32f0xx_usart.o(.text)
    USART_SetPrescaler                       0x08002765   Thumb Code    18  stm32f0xx_usart.o(.text)
    USART_STOPModeCmd                        0x08002777   Thumb Code    24  stm32f0xx_usart.o(.text)
    USART_StopModeWakeUpSourceConfig         0x0800278f   Thumb Code    18  stm32f0xx_usart.o(.text)
    USART_AutoBaudRateCmd                    0x080027a1   Thumb Code    28  stm32f0xx_usart.o(.text)
    USART_AutoBaudRateConfig                 0x080027bd   Thumb Code    18  stm32f0xx_usart.o(.text)
    USART_SendData                           0x080027cf   Thumb Code     8  stm32f0xx_usart.o(.text)
    USART_ReceiveData                        0x080027d7   Thumb Code    10  stm32f0xx_usart.o(.text)
    USART_SetAddress                         0x080027e1   Thumb Code    18  stm32f0xx_usart.o(.text)
    USART_MuteModeCmd                        0x080027f3   Thumb Code    28  stm32f0xx_usart.o(.text)
    USART_MuteModeWakeUpConfig               0x0800280f   Thumb Code    18  stm32f0xx_usart.o(.text)
    USART_AddressDetectionConfig             0x08002821   Thumb Code    16  stm32f0xx_usart.o(.text)
    USART_LINBreakDetectLengthConfig         0x08002831   Thumb Code    16  stm32f0xx_usart.o(.text)
    USART_LINCmd                             0x08002841   Thumb Code    68  stm32f0xx_usart.o(.text)
    USART_HalfDuplexCmd                      0x08002885   Thumb Code    24  stm32f0xx_usart.o(.text)
    USART_SetGuardTime                       0x0800289d   Thumb Code    16  stm32f0xx_usart.o(.text)
    USART_SmartCardCmd                       0x080028ad   Thumb Code    24  stm32f0xx_usart.o(.text)
    USART_SmartCardNACKCmd                   0x080028c5   Thumb Code    24  stm32f0xx_usart.o(.text)
    USART_SetAutoRetryCount                  0x080028dd   Thumb Code    20  stm32f0xx_usart.o(.text)
    USART_SetBlockLength                     0x080028f1   Thumb Code    18  stm32f0xx_usart.o(.text)
    USART_IrDAConfig                         0x08002903   Thumb Code    16  stm32f0xx_usart.o(.text)
    USART_IrDACmd                            0x08002913   Thumb Code    24  stm32f0xx_usart.o(.text)
    USART_DECmd                              0x0800292b   Thumb Code    28  stm32f0xx_usart.o(.text)
    USART_DEPolarityConfig                   0x08002947   Thumb Code    18  stm32f0xx_usart.o(.text)
    USART_SetDEAssertionTime                 0x08002959   Thumb Code    20  stm32f0xx_usart.o(.text)
    USART_SetDEDeassertionTime               0x0800296d   Thumb Code    20  stm32f0xx_usart.o(.text)
    USART_DMACmd                             0x08002981   Thumb Code    20  stm32f0xx_usart.o(.text)
    USART_DMAReceptionErrorConfig            0x08002995   Thumb Code    18  stm32f0xx_usart.o(.text)
    USART_ITConfig                           0x080029a7   Thumb Code    66  stm32f0xx_usart.o(.text)
    USART_RequestCmd                         0x080029e9   Thumb Code    20  stm32f0xx_usart.o(.text)
    USART_OverrunDetectionConfig             0x080029fd   Thumb Code    18  stm32f0xx_usart.o(.text)
    USART_GetFlagStatus                      0x08002a0f   Thumb Code    20  stm32f0xx_usart.o(.text)
    USART_ClearFlag                          0x08002a23   Thumb Code     4  stm32f0xx_usart.o(.text)
    USART_GetITStatus                        0x08002a27   Thumb Code    78  stm32f0xx_usart.o(.text)
    USART_ClearITPendingBit                  0x08002a75   Thumb Code    18  stm32f0xx_usart.o(.text)
    RCC_DeInit                               0x08002a89   Thumb Code   102  stm32f0xx_rcc.o(.text)
    RCC_HSEConfig                            0x08002aef   Thumb Code    12  stm32f0xx_rcc.o(.text)
    RCC_GetFlagStatus                        0x08002afb   Thumb Code    68  stm32f0xx_rcc.o(.text)
    RCC_WaitForHSEStartUp                    0x08002b3f   Thumb Code    60  stm32f0xx_rcc.o(.text)
    RCC_AdjustHSICalibrationValue            0x08002b7b   Thumb Code    26  stm32f0xx_rcc.o(.text)
    RCC_HSICmd                               0x08002b95   Thumb Code    32  stm32f0xx_rcc.o(.text)
    RCC_AdjustHSI14CalibrationValue          0x08002bb5   Thumb Code    26  stm32f0xx_rcc.o(.text)
    RCC_HSI14Cmd                             0x08002bcf   Thumb Code    32  stm32f0xx_rcc.o(.text)
    RCC_HSI14ADCRequestCmd                   0x08002bef   Thumb Code    32  stm32f0xx_rcc.o(.text)
    RCC_LSEConfig                            0x08002c0f   Thumb Code    34  stm32f0xx_rcc.o(.text)
    RCC_LSEDriveConfig                       0x08002c31   Thumb Code    22  stm32f0xx_rcc.o(.text)
    RCC_LSICmd                               0x08002c47   Thumb Code    32  stm32f0xx_rcc.o(.text)
    RCC_PLLConfig                            0x08002c67   Thumb Code    30  stm32f0xx_rcc.o(.text)
    RCC_PLLCmd                               0x08002c85   Thumb Code    36  stm32f0xx_rcc.o(.text)
    RCC_HSI48Cmd                             0x08002ca9   Thumb Code    36  stm32f0xx_rcc.o(.text)
    RCC_PREDIV1Config                        0x08002ccd   Thumb Code    24  stm32f0xx_rcc.o(.text)
    RCC_ClockSecuritySystemCmd               0x08002ce5   Thumb Code    36  stm32f0xx_rcc.o(.text)
    RCC_MCOConfig                            0x08002d09   Thumb Code    24  stm32f0xx_rcc.o(.text)
    RCC_SYSCLKConfig                         0x08002d21   Thumb Code    24  stm32f0xx_rcc.o(.text)
    RCC_GetSYSCLKSource                      0x08002d39   Thumb Code    10  stm32f0xx_rcc.o(.text)
    RCC_HCLKConfig                           0x08002d43   Thumb Code    28  stm32f0xx_rcc.o(.text)
    RCC_PCLKConfig                           0x08002d5f   Thumb Code    30  stm32f0xx_rcc.o(.text)
    RCC_ADCCLKConfig                         0x08002d7d   Thumb Code    52  stm32f0xx_rcc.o(.text)
    RCC_CECCLKConfig                         0x08002db1   Thumb Code    22  stm32f0xx_rcc.o(.text)
    RCC_I2CCLKConfig                         0x08002dc7   Thumb Code    22  stm32f0xx_rcc.o(.text)
    RCC_USARTCLKConfig                       0x08002ddd   Thumb Code    68  stm32f0xx_rcc.o(.text)
    RCC_USBCLKConfig                         0x08002e21   Thumb Code    22  stm32f0xx_rcc.o(.text)
    RCC_GetClocksFreq                        0x08002e37   Thumb Code   576  stm32f0xx_rcc.o(.text)
    RCC_RTCCLKConfig                         0x08003077   Thumb Code    12  stm32f0xx_rcc.o(.text)
    RCC_RTCCLKCmd                            0x08003083   Thumb Code    36  stm32f0xx_rcc.o(.text)
    RCC_BackupResetCmd                       0x080030a7   Thumb Code    36  stm32f0xx_rcc.o(.text)
    RCC_AHBPeriphClockCmd                    0x080030cb   Thumb Code    28  stm32f0xx_rcc.o(.text)
    RCC_APB2PeriphClockCmd                   0x080030e7   Thumb Code    28  stm32f0xx_rcc.o(.text)
    RCC_APB1PeriphClockCmd                   0x08003103   Thumb Code    28  stm32f0xx_rcc.o(.text)
    RCC_AHBPeriphResetCmd                    0x0800311f   Thumb Code    28  stm32f0xx_rcc.o(.text)
    RCC_APB2PeriphResetCmd                   0x0800313b   Thumb Code    28  stm32f0xx_rcc.o(.text)
    RCC_APB1PeriphResetCmd                   0x08003157   Thumb Code    28  stm32f0xx_rcc.o(.text)
    RCC_ITConfig                             0x08003173   Thumb Code    28  stm32f0xx_rcc.o(.text)
    RCC_ClearFlag                            0x0800318f   Thumb Code    16  stm32f0xx_rcc.o(.text)
    RCC_GetITStatus                          0x0800319f   Thumb Code    22  stm32f0xx_rcc.o(.text)
    RCC_ClearITPendingBit                    0x080031b5   Thumb Code     6  stm32f0xx_rcc.o(.text)
    _platform_post_stackheap_init            0x080031d9   Thumb Code     8  rtx_lib.o(.text)
    __user_perthread_libspace                0x08003203   Thumb Code    94  rtx_lib.o(.text)
    _mutex_initialize                        0x08003261   Thumb Code    34  rtx_lib.o(.text)
    _mutex_acquire                           0x08003283   Thumb Code    24  rtx_lib.o(.text)
    _mutex_release                           0x0800329b   Thumb Code    20  rtx_lib.o(.text)
    _mutex_free                              0x080032af   Thumb Code    12  rtx_lib.o(.text)
    osRtxIdleThread                          0x080032cd   Thumb Code     4  rtx_config.o(.text)
    osRtxErrorNotify                         0x080032d1   Thumb Code    32  rtx_config.o(.text)
    Reset_Handler                            0x080032f1   Thumb Code     8  startup_stm32f030x8.o(.text)
    NMI_Handler                              0x080032f9   Thumb Code     2  startup_stm32f030x8.o(.text)
    HardFault_Handler                        0x080032fb   Thumb Code     2  startup_stm32f030x8.o(.text)
    ADC1_IRQHandler                          0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    DMA1_Channel1_IRQHandler                 0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    DMA1_Channel4_5_IRQHandler               0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    EXTI0_1_IRQHandler                       0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    EXTI2_3_IRQHandler                       0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    EXTI4_15_IRQHandler                      0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    FLASH_IRQHandler                         0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    I2C2_IRQHandler                          0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    RCC_IRQHandler                           0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    RTC_IRQHandler                           0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    SPI1_IRQHandler                          0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    SPI2_IRQHandler                          0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM14_IRQHandler                         0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM15_IRQHandler                         0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM16_IRQHandler                         0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM17_IRQHandler                         0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM1_CC_IRQHandler                       0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM3_IRQHandler                          0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    USART2_IRQHandler                        0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    WWDG_IRQHandler                          0x08003303   Thumb Code     0  startup_stm32f030x8.o(.text)
    __user_initial_stackheap                 0x08003305   Thumb Code     0  startup_stm32f030x8.o(.text)
    SystemInit                               0x08003329   Thumb Code   228  system_stm32f0xx.o(.text)
    SystemCoreClockUpdate                    0x0800340d   Thumb Code   158  system_stm32f0xx.o(.text)
    SVC_Handler                              0x080034d1   Thumb Code   120  irq_cm0.o(.text)
    PendSV_Handler                           0x08003549   Thumb Code    12  irq_cm0.o(.text)
    SysTick_Handler                          0x08003555   Thumb Code    12  irq_cm0.o(.text)
    __2sprintf                               0x08003569   Thumb Code    36  noretval__2sprintf.o(.text)
    __printf                                 0x08003591   Thumb Code   108  __printf.o(.text)
    _printf_int_dec                          0x080035fd   Thumb Code    90  _printf_dec.o(.text)
    __aeabi_memcpy                           0x08003669   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x08003669   Thumb Code     0  rt_memcpy.o(.text)
    __aeabi_memset4                          0x080036eb   Thumb Code    18  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x080036eb   Thumb Code     0  aeabi_memset4.o(.text)
    _memset_w                                0x080036fd   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x08003717   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x08003735   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x08003735   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08003739   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x08003739   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x08003739   Thumb Code     4  rt_memclr.o(.text)
    __aeabi_uidiv                            0x0800373d   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_uidivmod                         0x0800373d   Thumb Code    28  aeabi_sdivfast.o(.text)
    __aeabi_idiv                             0x08003759   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_idivmod                          0x08003759   Thumb Code   460  aeabi_sdivfast.o(.text)
    __use_two_region_memory                  0x08003925   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08003927   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08003929   Thumb Code     2  heapauxi.o(.text)
    _printf_int_common                       0x0800392b   Thumb Code   176  _printf_intcommon.o(.text)
    _printf_char_common                      0x080039e7   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x08003a0d   Thumb Code    10  _sputc.o(.text)
    __rt_udiv10                              0x08003a17   Thumb Code    40  rtudiv10.o(.text)
    __user_setup_stackheap                   0x08003a3f   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x08003a7d   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x08003a8d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08003a8d   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08003a95   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08003aa1   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08003aa1   Thumb Code     2  use_no_semi.o(.text)
    __decompress                             0x08003aa3   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x08003aa3   Thumb Code    86  __dczerorl2.o(.text)
    __semihosting_library_function           0x08003aa3   Thumb Code     0  indicate_semi.o(.text)
    osDelay                                  0x08003af9   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osEventFlagsNew                          0x08003b1d   Thumb Code    56  rtx_evflags.o(.text.osEventFlagsNew)
    osEventFlagsSet                          0x08003b55   Thumb Code    88  rtx_evflags.o(.text.osEventFlagsSet)
    osEventFlagsWait                         0x08003bad   Thumb Code   192  rtx_evflags.o(.text.osEventFlagsWait)
    osKernelGetState                         0x08003c6d   Thumb Code    52  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x08003ca1   Thumb Code    56  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08003cd9   Thumb Code    56  rtx_kernel.o(.text.osKernelStart)
    osMessageQueuePut                        0x08003d11   Thumb Code   128  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08003d91   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08003db5   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08003dd9   Thumb Code    56  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08003e11   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxEventFlagsPostProcess               0x08003e35   Thumb Code   160  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    osRtxMemoryAlloc                         0x08003ed5   Thumb Code   118  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08003f4b   Thumb Code    74  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08003f95   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08003fcb   Thumb Code    54  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08004001   Thumb Code    62  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x0800403f   Thumb Code    68  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x08004083   Thumb Code    70  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x080040c9   Thumb Code   160  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08004169   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxSysTimerAckIRQ                      0x080041dd   Thumb Code    12  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    osRtxSysTimerEnable                      0x080041e9   Thumb Code    12  rtx_system.o(.text.osRtxSysTimerEnable)
    osRtxSysTimerSetup                       0x080041f5   Thumb Code    56  rtx_system.o(.text.osRtxSysTimerSetup)
    osRtxThreadDelayTick                     0x0800422d   Thumb Code   128  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x080042ad   Thumb Code   300  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x080043d9   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x080043f1   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08004429   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08004441   Thumb Code    92  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x0800449d   Thumb Code   264  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadReadyPut                      0x080045a5   Thumb Code    72  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x080045ed   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x080045f5   Thumb Code    44  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadSwitch                        0x08004621   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08004635   Thumb Code   232  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x0800471d   Thumb Code   168  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x080047c5   Thumb Code   120  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerTick                           0x0800483d   Thumb Code   164  rtx_timer.o(.text.osRtxTimerTick)
    osThreadExit                             0x080048e1   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadGetId                            0x080048ed   Thumb Code    32  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x0800490d   Thumb Code    56  rtx_thread.o(.text.osThreadNew)
    osThreadSetPriority                      0x08004945   Thumb Code    36  rtx_thread.o(.text.osThreadSetPriority)
    svcRtxDelay                              0x08004969   Thumb Code    18  rtx_delay.o(.text.svcRtxDelay)
    svcRtxEventFlagsNew                      0x0800497d   Thumb Code   120  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    svcRtxEventFlagsSet                      0x080049f5   Thumb Code   272  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    svcRtxEventFlagsWait                     0x08004b05   Thumb Code   240  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    svcRtxKernelGetState                     0x08004bf5   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x08004c01   Thumb Code   436  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08004db5   Thumb Code   144  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueuePut                    0x08004e45   Thumb Code   308  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08004f79   Thumb Code   164  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x0800501d   Thumb Code   216  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x080050f5   Thumb Code   120  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x0800516d   Thumb Code   204  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08005239   Thumb Code   340  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadGetId                        0x0800538d   Thumb Code    12  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x08005399   Thumb Code   584  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadSetPriority                  0x080055e1   Thumb Code   280  rtx_thread.o(.text.svcRtxThreadSetPriority)
    __ARM_common_switch8                     0x080056f9   Thumb Code    28  modbus_func.o(i.__ARM_common_switch8)
    stCrcTable                               0x08005714   Data         512  modbus.o(.constdata)
    stHoldingRegArray                        0x0800591c   Data          48  modbus_func.o(.constdata)
    sizeOfHoldingRegister                    0x0800594c   Data           2  modbus_func.o(.constdata)
    step_array_full                          0x08005950   Data           4  stepper_motor.o(.constdata)
    ucShift                                  0x08005954   Data           2  stepper_motor.o(.constdata)
    ulStepperEn                              0x08005958   Data           8  stepper_motor.o(.constdata)
    ulStepperMask                            0x08005960   Data           8  stepper_motor.o(.constdata)
    ulSwitchMask                             0x08005968   Data           8  stepper_motor.o(.constdata)
    stepper_max_point                        0x08005970   Data           4  stepper_motor.o(.constdata)
    osRtxUserSVC                             0x080059d4   Data           4  rtx_lib.o(.constdata)
    AHBPrescTable                            0x080059d8   Data          16  system_stm32f0xx.o(.constdata)
    irqRtxLib                                0x080059e8   Data           1  irq_cm0.o(.constdata)
    osRtxConfig                              0x080059ec   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x08005a60   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08005a80   Number         0  anon$$obj.o(Region$$Table)
    mutex_i2c                                0x200014d0   Data           4  main.o(.data)
    event_general                            0x200014d4   Data           4  main.o(.data)
    stTempHum                                0x200014d8   Data           4  hdc1080.o(.data)
    stHDC1080Status                          0x200014dc   Data           1  hdc1080.o(.data)
    uiTimerHDC1080                           0x200014de   Data           2  hdc1080.o(.data)
    statusT                                  0x200014e0   Data           4  hdc1080.o(.data)
    uiWordQty                                0x200014e4   Data           2  modbus.o(.data)
    ulMfTmp                                  0x200014e8   Data           4  modbus_func.o(.data)
    uiMfTmp                                  0x200014ec   Data           2  modbus_func.o(.data)
    ptruInt                                  0x200014f0   Data           4  modbus_func.o(.data)
    uistMfTmp                                0x200014f4   Data           2  modbus_func.o(.data)
    ptruChar                                 0x200014f8   Data           4  modbus_func.o(.data)
    ulPar1                                   0x200014fc   Data           4  modbus_func.o(.data)
    active_motor                             0x20001500   Data           1  stepper_motor.o(.data)
    infrared_sensor_cnt                      0x20001504   Data           2  main_task.o(.data)
    cat_detection                            0x20001506   Data           1  main_task.o(.data)
    task_cnt                                 0x20001508   Data           4  main_task.o(.data)
    send_msg_cnt                             0x2000150c   Data           2  main_task.o(.data)
    i                                        0x2000150e   Data           1  main_task.o(.data)
    ulInputs                                 0x20001510   Data           4  gpio.o(.data)
    ulOutputs                                0x20001514   Data           4  gpio.o(.data)
    ulTmp                                    0x20001518   Data           4  gpio.o(.data)
    uart1Tx                                  0x2000151c   Data          66  uart.o(.data)
    uart1Flags                               0x2000155e   Data           5  uart.o(.data)
    uiTmp                                    0x20001563   Data           1  uart.o(.data)
    uiTimerUart1                             0x20001564   Data           2  uart.o(.data)
    ptr_i2c_tx                               0x20001568   Data           4  i2c.o(.data)
    ptr_i2c_rx                               0x2000156c   Data           4  i2c.o(.data)
    i2c_msg_tx_s                             0x20001570   Data           3  i2c.o(.data)
    i2c_status_s                             0x20001573   Data           1  i2c.o(.data)
    i2c_master_send_start_stop               0x20001574   Data           1  i2c.o(.data)
    ulTempI2C                                0x20001578   Data           4  i2c.o(.data)
    uiTimerI2C                               0x2000157c   Data           2  i2c.o(.data)
    irqRtxLibRef                             0x20001590   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x20001598   Data           4  system_stm32f0xx.o(.data)
    osRtxInfo                                0x200015a0   Data         168  rtx_kernel.o(.data.os)
    sys_par                                  0x20001648   Data          10  pub_var.o(.bss)
    mbTxRxData                               0x20001654   Data          12  modbus.o(.bss)
    motor_s                                  0x20001660   Data          16  stepper_motor.o(.bss)
    uart1Rx                                  0x20001670   Data         136  uart.o(.bss)
    i2c_tx_buf                               0x200016f8   Data          34  i2c.o(.bss)
    i2c_rx_buf                               0x2000171a   Data          34  i2c.o(.bss)
    __libspace_start                         0x2000173c   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x2000179c   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000b5

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000070c8, Max: 0x00010000, ABSOLUTE, COMPRESSED[0x00005ae8])

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x00005a80, Max: 0x00010000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x000000b4   Data   RO          712    RESET               startup_stm32f030x8.o
    0x080000b4   0x00000008   Code   RO         1282  * !!!main             c_p.l(__main.o)
    0x080000bc   0x0000003c   Code   RO         1462    !!!scatter          c_p.l(__scatter.o)
    0x080000f8   0x0000001c   Code   RO         1464    !!handler_zi        c_p.l(__scatter_zi.o)
    0x08000114   0x00000002   Code   RO         1267    .ARM.Collect$$_printf_percent$$00000000  c_p.l(_printf_percent.o)
    0x08000116   0x0000000a   Code   RO         1266    .ARM.Collect$$_printf_percent$$00000009  c_p.l(_printf_d.o)
    0x08000120   0x00000004   Code   RO         1295    .ARM.Collect$$_printf_percent$$00000017  c_p.l(_printf_percent_end.o)
    0x08000124   0x00000002   Code   RO         1329    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x08000126   0x00000000   Code   RO         1343    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1345    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1348    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1350    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1352    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1355    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1357    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1359    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1361    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1363    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1365    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1367    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1369    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1371    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1373    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1375    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1379    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1381    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1383    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x08000126   0x00000000   Code   RO         1385    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x08000126   0x00000002   Code   RO         1386    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x08000128   0x00000002   Code   RO         1417    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x0800012a   0x00000000   Code   RO         1443    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x0800012a   0x00000000   Code   RO         1445    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x0800012a   0x00000000   Code   RO         1448    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x0800012a   0x00000000   Code   RO         1451    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x0800012a   0x00000000   Code   RO         1453    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x0800012a   0x00000000   Code   RO         1456    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x0800012a   0x00000002   Code   RO         1457    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x0800012c   0x00000000   Code   RO         1284    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x0800012c   0x00000000   Code   RO         1299    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x0800012c   0x00000006   Code   RO         1311    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x08000132   0x00000008   Code   RO         1300    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x0800013a   0x00000004   Code   RO         1302    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0800013e   0x00000000   Code   RO         1304    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0800013e   0x00000008   Code   RO         1305    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x08000146   0x00000002   Code   RO         1334    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x08000148   0x00000000   Code   RO         1390    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x08000148   0x00000004   Code   RO         1391    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x0800014c   0x00000006   Code   RO         1392    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x08000152   0x00000002   PAD
    0x08000154   0x00000038   Code   RO         1268    .emb_text           c_p.l(rt_memcpy.o)
    0x0800018c   0x0000010c   Code   RO            3    .text               main.o
    0x08000298   0x00000024   Code   RO          130    .text               pub_var.o
    0x080002bc   0x0000008e   Code   RO          148    .text               util.o
    0x0800034a   0x00000002   PAD
    0x0800034c   0x000002ec   Code   RO          165    .text               hdc1080.o
    0x08000638   0x000002dc   Code   RO          195    .text               modbus.o
    0x08000914   0x00000278   Code   RO          257    .text               modbus_func.o
    0x08000b8c   0x000003c4   Code   RO          290    .text               stepper_motor.o
    0x08000f50   0x00000384   Code   RO          318    .text               hc0x_bluetooth.o
    0x080012d4   0x000001c8   Code   RO          345    .text               main_task.o
    0x0800149c   0x00000150   Code   RO          368    .text               gpio.o
    0x080015ec   0x000003dc   Code   RO          394    .text               uart.o
    0x080019c8   0x000003f8   Code   RO          421    .text               i2c.o
    0x08001dc0   0x00000140   Code   RO          451    .text               timer.o
    0x08001f00   0x000002b4   Code   RO          478    .text               stm32f0xx_dma.o
    0x080021b4   0x0000020c   Code   RO          510    .text               stm32f0xx_gpio.o
    0x080023c0   0x000000b4   Code   RO          536    .text               stm32f0xx_misc.o
    0x08002474   0x00000612   Code   RO          559    .text               stm32f0xx_usart.o
    0x08002a86   0x00000002   PAD
    0x08002a88   0x00000750   Code   RO          628    .text               stm32f0xx_rcc.o
    0x080031d8   0x000000f4   Code   RO          650    .text               rtx_lib.o
    0x080032cc   0x00000024   Code   RO          688    .text               rtx_config.o
    0x080032f0   0x00000038   Code   RO          713    .text               startup_stm32f030x8.o
    0x08003328   0x000001a8   Code   RO          719    .text               system_stm32f0xx.o
    0x080034d0   0x00000098   Code   RO         1039    .text               RTX_CM0.lib(irq_cm0.o)
    0x08003568   0x00000028   Code   RO         1240    .text               c_p.l(noretval__2sprintf.o)
    0x08003590   0x0000006c   Code   RO         1242    .text               c_p.l(__printf.o)
    0x080035fc   0x0000006c   Code   RO         1244    .text               c_p.l(_printf_dec.o)
    0x08003668   0x00000082   Code   RO         1269    .text               c_p.l(rt_memcpy.o)
    0x080036ea   0x00000012   Code   RO         1272    .text               c_p.l(aeabi_memset4.o)
    0x080036fc   0x00000040   Code   RO         1274    .text               c_p.l(rt_memclr.o)
    0x0800373c   0x000001e8   Code   RO         1276    .text               c_p.l(aeabi_sdivfast.o)
    0x08003924   0x00000006   Code   RO         1280    .text               c_p.l(heapauxi.o)
    0x0800392a   0x000000b0   Code   RO         1289    .text               c_p.l(_printf_intcommon.o)
    0x080039da   0x00000002   PAD
    0x080039dc   0x00000030   Code   RO         1291    .text               c_p.l(_printf_char_common.o)
    0x08003a0c   0x0000000a   Code   RO         1293    .text               c_p.l(_sputc.o)
    0x08003a16   0x00000028   Code   RO         1296    .text               c_p.l(rtudiv10.o)
    0x08003a3e   0x0000003e   Code   RO         1317    .text               c_p.l(sys_stackheap_outer.o)
    0x08003a7c   0x00000010   Code   RO         1320    .text               c_p.l(exit.o)
    0x08003a8c   0x00000008   Code   RO         1330    .text               c_p.l(libspace.o)
    0x08003a94   0x0000000c   Code   RO         1387    .text               c_p.l(sys_exit.o)
    0x08003aa0   0x00000002   Code   RO         1406    .text               c_p.l(use_no_semi.o)
    0x08003aa2   0x00000000   Code   RO         1408    .text               c_p.l(indicate_semi.o)
    0x08003aa2   0x00000056   Code   RO         1460    .text               c_p.l(__dczerorl2.o)
    0x08003af8   0x00000024   Code   RO          946    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x08003b1c   0x00000038   Code   RO          977    .text.osEventFlagsNew  RTX_CM0.lib(rtx_evflags.o)
    0x08003b54   0x00000058   Code   RO          981    .text.osEventFlagsSet  RTX_CM0.lib(rtx_evflags.o)
    0x08003bac   0x000000c0   Code   RO          987    .text.osEventFlagsWait  RTX_CM0.lib(rtx_evflags.o)
    0x08003c6c   0x00000034   Code   RO          775    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x08003ca0   0x00000038   Code   RO          771    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x08003cd8   0x00000038   Code   RO          777    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x08003d10   0x00000080   Code   RO         1210    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x08003d90   0x00000024   Code   RO         1020    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x08003db4   0x00000024   Code   RO         1026    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x08003dd8   0x00000038   Code   RO         1016    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x08003e10   0x00000024   Code   RO         1022    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x08003e34   0x000000a0   Code   RO          961    .text.osRtxEventFlagsPostProcess  RTX_CM0.lib(rtx_evflags.o)
    0x08003ed4   0x00000076   Code   RO         1085    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x08003f4a   0x0000004a   Code   RO         1087    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x08003f94   0x00000036   Code   RO         1083    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x08003fca   0x00000036   Code   RO         1102    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x08004000   0x0000003e   Code   RO         1104    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x0800403e   0x00000044   Code   RO         1100    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x08004082   0x00000046   Code   RO         1002    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x080040c8   0x000000a0   Code   RO         1159    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x08004168   0x00000074   Code   RO         1161    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x080041dc   0x0000000c   Code   RO         1157    .text.osRtxSysTimerAckIRQ  RTX_CM0.lib(rtx_system.o)
    0x080041e8   0x0000000c   Code   RO         1165    .text.osRtxSysTimerEnable  RTX_CM0.lib(rtx_system.o)
    0x080041f4   0x00000038   Code   RO         1163    .text.osRtxSysTimerSetup  RTX_CM0.lib(rtx_system.o)
    0x0800422c   0x00000080   Code   RO          829    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x080042ac   0x0000012c   Code   RO          839    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x080043d8   0x00000018   Code   RO          813    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x080043f0   0x00000038   Code   RO          811    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x08004428   0x00000018   Code   RO          819    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x08004440   0x0000005c   Code   RO          817    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x0800449c   0x00000108   Code   RO          845    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x080045a4   0x00000048   Code   RO          823    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x080045ec   0x00000006   Code   RO          831    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x080045f2   0x00000002   PAD
    0x080045f4   0x0000002c   Code   RO          837    .text.osRtxThreadStackCheck  RTX_CM0.lib(rtx_thread.o)
    0x08004620   0x00000014   Code   RO          835    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x08004634   0x000000e8   Code   RO          843    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x0800471c   0x000000a8   Code   RO          841    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x080047c4   0x00000078   Code   RO         1155    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x0800483c   0x000000a4   Code   RO         1044    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x080048e0   0x0000000c   Code   RO          849    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x080048ec   0x00000020   Code   RO          895    .text.osThreadGetId  RTX_CM0.lib(rtx_thread.o)
    0x0800490c   0x00000038   Code   RO          891    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x08004944   0x00000024   Code   RO          903    .text.osThreadSetPriority  RTX_CM0.lib(rtx_thread.o)
    0x08004968   0x00000012   Code   RO          942    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x0800497a   0x00000002   PAD
    0x0800497c   0x00000078   Code   RO          963    .text.svcRtxEventFlagsNew  RTX_CM0.lib(rtx_evflags.o)
    0x080049f4   0x00000110   Code   RO          967    .text.svcRtxEventFlagsSet  RTX_CM0.lib(rtx_evflags.o)
    0x08004b04   0x000000f0   Code   RO          973    .text.svcRtxEventFlagsWait  RTX_CM0.lib(rtx_evflags.o)
    0x08004bf4   0x0000000c   Code   RO          749    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x08004c00   0x000001b4   Code   RO          745    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x08004db4   0x00000090   Code   RO          751    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x08004e44   0x00000134   Code   RO         1190    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x08004f78   0x000000a4   Code   RO         1008    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x0800501c   0x000000d8   Code   RO         1014    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x080050f4   0x00000078   Code   RO         1004    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x0800516c   0x000000cc   Code   RO         1010    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x08005238   0x00000154   Code   RO          875    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x0800538c   0x0000000c   Code   RO          853    .text.svcRtxThreadGetId  RTX_CM0.lib(rtx_thread.o)
    0x08005398   0x00000248   Code   RO          847    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x080055e0   0x00000118   Code   RO          861    .text.svcRtxThreadSetPriority  RTX_CM0.lib(rtx_thread.o)
    0x080056f8   0x0000001c   Code   RO          276    i.__ARM_common_switch8  modbus_func.o
    0x08005714   0x00000206   Data   RO          197    .constdata          modbus.o
    0x0800591a   0x00000002   PAD
    0x0800591c   0x00000032   Data   RO          258    .constdata          modbus_func.o
    0x0800594e   0x00000002   PAD
    0x08005950   0x00000024   Data   RO          292    .constdata          stepper_motor.o
    0x08005974   0x00000064   Data   RO          656    .constdata          rtx_lib.o
    0x080059d8   0x00000010   Data   RO          720    .constdata          system_stm32f0xx.o
    0x080059e8   0x00000001   Data   RO         1038    .constdata          RTX_CM0.lib(irq_cm0.o)
    0x080059e9   0x00000003   PAD
    0x080059ec   0x00000068   Data   RO          658    .rodata             rtx_lib.o
    0x08005a54   0x0000000b   Data   RO          797    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x08005a5f   0x00000001   PAD
    0x08005a60   0x00000020   Data   RO         1458    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00001ea0, Max: 0x00002000, ABSOLUTE, COMPRESSED[0x00000068])

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001230   Data   RW          651    .bss.os             rtx_lib.o
    0x20001230   0x00000034   Data   RW          652    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001264   0x00000050   Data   RW          653    .bss.os.msgqueue.mem  rtx_lib.o
    0x200012b4   0x00000088   Data   RW          654    .bss.os.thread.cb   rtx_lib.o
    0x2000133c   0x00000004   PAD
    0x20001340   0x00000190   Data   RW          655    .bss.os.thread.stack  rtx_lib.o
    0x200014d0   0x00000008   Data   RW            4    .data               main.o
    0x200014d8   0x0000000c   Data   RW          166    .data               hdc1080.o
    0x200014e4   0x00000002   Data   RW          198    .data               modbus.o
    0x200014e6   0x00000002   PAD
    0x200014e8   0x00000018   Data   RW          259    .data               modbus_func.o
    0x20001500   0x00000001   Data   RW          293    .data               stepper_motor.o
    0x20001501   0x00000003   PAD
    0x20001504   0x0000000b   Data   RW          346    .data               main_task.o
    0x2000150f   0x00000001   PAD
    0x20001510   0x0000000c   Data   RW          369    .data               gpio.o
    0x2000151c   0x0000004a   Data   RW          396    .data               uart.o
    0x20001566   0x00000002   PAD
    0x20001568   0x00000016   Data   RW          423    .data               i2c.o
    0x2000157e   0x00000010   Data   RW          629    .data               stm32f0xx_rcc.o
    0x2000158e   0x00000002   PAD
    0x20001590   0x00000005   Data   RW          657    .data               rtx_lib.o
    0x20001595   0x00000003   PAD
    0x20001598   0x00000004   Data   RW          721    .data               system_stm32f0xx.o
    0x2000159c   0x00000004   PAD
    0x200015a0   0x000000a8   Data   RW          798    .data.os            RTX_CM0.lib(rtx_kernel.o)
    0x20001648   0x0000000a   Zero   RW          131    .bss                pub_var.o
    0x20001652   0x00000002   PAD
    0x20001654   0x0000000c   Zero   RW          196    .bss                modbus.o
    0x20001660   0x00000010   Zero   RW          291    .bss                stepper_motor.o
    0x20001670   0x00000088   Zero   RW          395    .bss                uart.o
    0x200016f8   0x00000044   Zero   RW          422    .bss                i2c.o
    0x2000173c   0x00000060   Zero   RW         1331    .bss                c_p.l(libspace.o)
    0x2000179c   0x00000004   PAD
    0x200017a0   0x00000200   Zero   RW          711    HEAP                startup_stm32f030x8.o
    0x200019a0   0x00000500   Zero   RW          710    STACK               startup_stm32f030x8.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       336         28          0         12          0       1180   gpio.o
       900        222          0          0          0       8590   hc0x_bluetooth.o
       748         42          0         12          0       3255   hdc1080.o
      1016         64          0         22         68      10386   i2c.o
       268         48          0          8          0     209582   main.o
       456         64          0         11          0       1092   main_task.o
       732         20        518          2         12       8989   modbus.o
       660         42         50         24          0       3123   modbus_func.o
        36          4          0          0         10        622   pub_var.o
        36          8          0          0          0        647   rtx_config.o
       244         18        204       5329          0       9898   rtx_lib.o
        56         26        180          0       1792        644   startup_stm32f030x8.o
       964         44         36          1         16       2797   stepper_motor.o
       692         18          0          0          0     189542   stm32f0xx_dma.o
       524         26          0          0          0      20909   stm32f0xx_gpio.o
       180         14          0          0          0       2136   stm32f0xx_misc.o
      1872         52          0         16          0       9048   stm32f0xx_rcc.o
      1554         40          0          0          0      21450   stm32f0xx_usart.o
       424         38         16          4          0       1503   system_stm32f0xx.o
       320         36          0          0          0        925   timer.o
       988         44          0         74        136       4086   uart.o
       142          0          0          0          0       1715   util.o

    ----------------------------------------------------------------------
     13152        898       1040       5536       2036     512119   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         4          0          4         21          2          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       152         10          1          0          0        500   irq_cm0.o
        54          4          0          0          0       2752   rtx_delay.o
      1128         24          0          0          0      13117   rtx_evflags.o
       756         52         11        168          0      16970   rtx_kernel.o
       246          0          0          0          0       2071   rtx_memory.o
       184          0          0          0          0      15766   rtx_mempool.o
       436          8          0          0          0      18819   rtx_msgqueue.o
       938         32          0          0          0       8607   rtx_mutex.o
       476         68          0          0          0       7480   rtx_system.o
      2782         84          0          0          0      39176   rtx_thread.o
       164          4          0          0          0       8403   rtx_timer.o
        86          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
       108          0          0          0          0         76   __printf.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        48          6          0          0          0         88   _printf_char_common.o
        10          0          0          0          0          0   _printf_d.o
       108         18          0          0          0         76   _printf_dec.o
       176          0          0          0          0         84   _printf_intcommon.o
         2          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
        10          0          0          0          0         60   _sputc.o
        18          0          0          0          0         68   aeabi_memset4.o
       488          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        40          4          0          0          0         84   noretval__2sprintf.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        40          0          0          0          0         60   rtudiv10.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      8960        330         16        168        100     135149   Library Totals
         8          0          4          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      7316        286         12        168          0     133661   RTX_CM0.lib
      1636         44          0          0         96       1488   c_p.l

    ----------------------------------------------------------------------
      8960        330         16        168        100     135149   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     22112       1228       1056       5704       2136     644944   Grand Totals
     22112       1228       1056        104       2136     644944   ELF Image Totals (compressed)
     22112       1228       1056        104          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                23168 (  22.63kB)
    Total RW  Size (RW Data + ZI Data)              7840 (   7.66kB)
    Total ROM Size (Code + RO Data + RW Data)      23272 (  22.73kB)

==============================================================================

